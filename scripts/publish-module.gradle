apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
//        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
//        from sourceSets.main.kotlin.srcDirs
    }
}

task releaseJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task packageJavadoc(type: Jar, dependsOn: 'releaseJavadoc') {
    archiveClassifier.set("javadoc")
    from {
        releaseJavadoc.destinationDir
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll set up later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact packageJavadoc

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Watermark Bitmap in Android'
                    url = 'https://github.com/Divya0319/BmpWatermark'
                    licenses {
                        license {
                            name = 'BmpWatermark License'
                            url = 'https://github.com/Divya0319/BmpWatermark/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'divya0319'
                            name = 'Divya Gupta'
                            email = 'divygupta0319@gmail.com'
                        }
                        // Add all other devs here...
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = 'scm:git:github.com/Divya0319/BmpWatermark.git'
                        developerConnection = 'scm:git:ssh://github.com/Divya0319/BmpWatermark.git'
                        url = 'https://github.com/Divya0319/BmpWatermark/tree/master'
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"],
    )
    sign publishing.publications
}